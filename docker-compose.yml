version: '3.8'

# NL2MySQL Docker Compose - Groq-Only Setup
# Usage: 
#   1. Set GROQ_API_KEY environment variable: export GROQ_API_KEY=your_key_here
#   2. Run: docker-compose up -d
#   3. Access: http://localhost:8000/docs

services:
  nl2mysql:
    build: .
    ports:
      - "8000:8000"
    environment:
      # Database configuration
      - DB_CONNECTION_STRING=mysql+pymysql://root:root@mysql:3306/identityiq
      - DB_MAX_POOL_SIZE=10
      - DB_TIMEOUT=30
      
      # LLM configuration (Groq ONLY)
      - LLM_PROVIDER=groq
      - LLM_GROQ_API_KEY=${GROQ_API_KEY}  # Set your Groq API key
      - LLM_GROQ_MODEL=llama-3.1-8b-instant
      - LLM_TEMPERATURE=0.1
      - LLM_MAX_TOKENS=1000
      
      # Vector database configuration
      - VECTOR_PERSIST_DIRECTORY=/app/chromadb
      - VECTOR_COLLECTION_NAME=schema_embeddings
      - VECTOR_EMBEDDING_MODEL=all-MiniLM-L6-v2
      - VECTOR_TOP_K=5
      
      # Application configuration
      - APP_DEBUG=false
      - APP_LOG_LEVEL=INFO
      - APP_HOST=0.0.0.0
      - APP_PORT=8000
    
    volumes:
      - ./chromadb:/app/chromadb
      - ./logs:/app/logs
    
    depends_on:
      - mysql
    
    restart: unless-stopped
    
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # MySQL database for IdentityIQ
  mysql:
    image: mysql:8.0
    environment:
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_DATABASE=identityiq
      - MYSQL_USER=identityiq
      - MYSQL_PASSWORD=identityiq
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    restart: unless-stopped
    
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

volumes:
  mysql_data:
    driver: local

networks:
  default:
    name: nl2mysql-network
