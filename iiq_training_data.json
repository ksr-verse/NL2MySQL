{
  "training_examples": [
    {
      "natural_language": "List all users with their email addresses",
      "sql": "SELECT firstname, lastname, email FROM spt_identity WHERE active = 1",
      "description": "Basic user listing with email"
    },
    {
      "natural_language": "Show me users who have accounts in Workday",
      "sql": "SELECT DISTINCT i.firstname, i.lastname, i.email FROM spt_identity i JOIN spt_link l ON i.id = l.identity_id JOIN spt_application a ON l.application = a.id WHERE a.name = 'Workday' AND i.active = 1",
      "description": "Users with Workday accounts"
    },
    {
      "natural_language": "Find users with TimeSheetEnterAuthority in Trakk",
      "sql": "SELECT DISTINCT i.firstname, i.lastname, i.email FROM spt_identity i JOIN spt_link l ON i.id = l.identity_id JOIN spt_application a ON l.application = a.id WHERE a.name = 'Trakk' AND (l.attributes LIKE '%TimeSheetEnterAuthority%' OR l.entitlements LIKE '%TimeSheetEnterAuthority%') AND i.active = 1",
      "description": "Users with specific Trakk entitlement"
    },
    {
      "natural_language": "Give me identities (First name, last name, displayname and emails, manager) who does have accounts (link) on workday, Trakk, Finance and Apache DS. User must have capability 'TimeSheetEnterAuthority' in Trakk application and user should also have PayrollAnalysis group in Finance application",
      "sql": "SELECT DISTINCT i.firstname, i.lastname, i.display_name, i.email, mgr.display_name as manager_name FROM spt_identity i LEFT JOIN spt_identity mgr ON i.manager = mgr.id WHERE i.id IN (SELECT l.identity_id FROM spt_link l JOIN spt_application app ON l.application = app.id WHERE app.name IN ('Workday', 'Trakk', 'Finance', 'Apache DS') GROUP BY l.identity_id HAVING COUNT(DISTINCT app.name) = 4) AND i.id IN (SELECT l.identity_id FROM spt_link l JOIN spt_application app ON l.application = app.id WHERE app.name = 'Trakk' AND (l.attributes LIKE '%TimeSheetEnterAuthority%' OR l.entitlements LIKE '%TimeSheetEnterAuthority%')) AND i.id IN (SELECT l.identity_id FROM spt_link l JOIN spt_application app ON l.application = app.id WHERE app.name = 'Finance' AND (l.attributes LIKE '%PayrollAnalysis%' OR l.entitlements LIKE '%PayrollAnalysis%')) ORDER BY i.lastname",
      "description": "Complex multi-app query with specific entitlements"
    },
    {
      "natural_language": "Show me users with manager information",
      "sql": "SELECT i.firstname, i.lastname, i.display_name, i.email, mgr.firstname as manager_firstname, mgr.lastname as manager_lastname FROM spt_identity i LEFT JOIN spt_identity mgr ON i.manager = mgr.id WHERE i.active = 1",
      "description": "Users with manager details"
    },
    {
      "natural_language": "Find users with specific entitlement in any application",
      "sql": "SELECT DISTINCT i.firstname, i.lastname, i.email, a.name as application_name FROM spt_identity i JOIN spt_link l ON i.id = l.identity_id JOIN spt_application a ON l.application = a.id WHERE (l.attributes LIKE '%TimeSheetEnterAuthority%' OR l.entitlements LIKE '%TimeSheetEnterAuthority%') AND i.active = 1",
      "description": "Users with specific entitlement across applications"
    },
    {
      "natural_language": "Get employees with accounts in multiple applications",
      "sql": "SELECT i.firstname, i.lastname, i.email, GROUP_CONCAT(a.name) as applications FROM spt_identity i JOIN spt_link l ON i.id = l.identity_id JOIN spt_application a ON l.application = a.id WHERE i.active = 1 GROUP BY i.id, i.firstname, i.lastname, i.email HAVING COUNT(DISTINCT a.name) > 1",
      "description": "Users with multiple application accounts"
    },
    {
      "natural_language": "Find users with PayrollAnalysis group in Finance",
      "sql": "SELECT DISTINCT i.firstname, i.lastname, i.email FROM spt_identity i JOIN spt_link l ON i.id = l.identity_id JOIN spt_application a ON l.application = a.id WHERE a.name = 'Finance' AND (l.attributes LIKE '%PayrollAnalysis%' OR l.entitlements LIKE '%PayrollAnalysis%') AND i.active = 1",
      "description": "Users with Finance PayrollAnalysis group"
    }
  ]
}
